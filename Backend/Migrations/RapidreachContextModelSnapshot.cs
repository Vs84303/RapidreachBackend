// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapidReachNET.Models;

#nullable disable

namespace RapidReachNET.Migrations
{
    [DbContext(typeof(RapidreachContext))]
    partial class RapidreachContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RapidReachNET.Models.Branch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("BranchName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("branch_name");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("branches", (string)null);
                });

            modelBuilder.Entity("RapidReachNET.Models.Courier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<string>("DropLocation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("drop_location");

                    b.Property<string>("ParcelDescription")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("parcel_description");

                    b.Property<double?>("ParcelWeight")
                        .HasColumnType("double")
                        .HasColumnName("parcel_weight");

                    b.Property<string>("PickUpLocation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pick_up_location");

                    b.Property<double?>("Price")
                        .HasColumnType("double")
                        .HasColumnName("price");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BranchId" }, "FKf9kctwrsiav1v2mdhw0wndxhv");

                    b.HasIndex(new[] { "UserId" }, "FKikc54fmhn8gjhr4t5hc176hrv");

                    b.ToTable("couriers", (string)null);
                });

            modelBuilder.Entity("RapidReachNET.Models.Feedback", b =>
                {
                    b.Property<long>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("feedback_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("FeedbackId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comment");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("FeedbackId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "FK312drfl5lquu37mu4trk8jkwx");

                    b.ToTable("feedbacks", (string)null);
                });

            modelBuilder.Entity("RapidReachNET.Models.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<double?>("Amount")
                        .HasColumnType("double")
                        .HasColumnName("amount");

                    b.Property<long>("CourierId")
                        .HasColumnType("bigint")
                        .HasColumnName("courier_id");

                    b.Property<DateOnly?>("PaymentDate")
                        .HasColumnType("date")
                        .HasColumnName("payment_date");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CourierId" }, "FKe4vq9lc0mx0kfiyyyqvr9490q");

                    b.ToTable("payments", (string)null);
                });

            modelBuilder.Entity("RapidReachNET.Models.Tracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateOnly?>("CourierDate")
                        .HasColumnType("date")
                        .HasColumnName("courier_date");

                    b.Property<long>("CourierId")
                        .HasColumnType("bigint")
                        .HasColumnName("courier_id");

                    b.Property<string>("TrackingStatus")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tracking_status");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CourierId" }, "FK62ktttyhdhyw9b4kmj2vwekwx");

                    b.ToTable("tracking", (string)null);
                });

            modelBuilder.Entity("RapidReachNET.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<string>("Contact")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contact");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Pincode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("pincode");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BranchId" }, "FK9o70sp9ku40077y38fk4wieyk");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("RapidReachNET.Models.Courier", b =>
                {
                    b.HasOne("RapidReachNET.Models.Branch", "Branch")
                        .WithMany("Couriers")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FKf9kctwrsiav1v2mdhw0wndxhv");

                    b.HasOne("RapidReachNET.Models.User", "User")
                        .WithMany("Couriers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FKikc54fmhn8gjhr4t5hc176hrv");

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RapidReachNET.Models.Feedback", b =>
                {
                    b.HasOne("RapidReachNET.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK312drfl5lquu37mu4trk8jkwx");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RapidReachNET.Models.Payment", b =>
                {
                    b.HasOne("RapidReachNET.Models.Courier", "Courier")
                        .WithMany("Payments")
                        .HasForeignKey("CourierId")
                        .IsRequired()
                        .HasConstraintName("FKe4vq9lc0mx0kfiyyyqvr9490q");

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("RapidReachNET.Models.Tracking", b =>
                {
                    b.HasOne("RapidReachNET.Models.Courier", "Courier")
                        .WithMany("Trackings")
                        .HasForeignKey("CourierId")
                        .IsRequired()
                        .HasConstraintName("FK62ktttyhdhyw9b4kmj2vwekwx");

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("RapidReachNET.Models.User", b =>
                {
                    b.HasOne("RapidReachNET.Models.Branch", "Branch")
                        .WithMany("Users")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK9o70sp9ku40077y38fk4wieyk");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("RapidReachNET.Models.Branch", b =>
                {
                    b.Navigation("Couriers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RapidReachNET.Models.Courier", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Trackings");
                });

            modelBuilder.Entity("RapidReachNET.Models.User", b =>
                {
                    b.Navigation("Couriers");

                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
