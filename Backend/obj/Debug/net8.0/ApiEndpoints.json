[
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "AddBranch",
    "RelativePath": "admin/addBranch",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "branch",
        "Type": "RapidReachNET.Models.Branch",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "AddEmployee",
    "RelativePath": "admin/addEmployee",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "employeeDto",
        "Type": "RapidReachNET.DTO.EmployeeCreateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "GetAllBranches",
    "RelativePath": "admin/getAllBranches",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "GetAllEmployees",
    "RelativePath": "admin/getAllEmployees",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "GetAllUsers",
    "RelativePath": "admin/getAllUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "GetBranchById",
    "RelativePath": "admin/getBranchById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "GetUserById",
    "RelativePath": "admin/getEmployeeById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.AdminController",
    "Method": "UpdateUser",
    "RelativePath": "admin/updateEmployee/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "employeeDto",
        "Type": "RapidReachNET.DTO.EmployeeUpdateDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.CourierController",
    "Method": "AddCourier",
    "RelativePath": "customer/addCourier/{customerId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "courierDto",
        "Type": "RapidReachNET.DTO.CourierRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.FeedbackController",
    "Method": "AddFeedback",
    "RelativePath": "customer/addFeedback",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "comment",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Int64",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RapidReachNET.Controllers.PaymentController",
    "Method": "AddPayment",
    "RelativePath": "customer/addPayment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "paymentDto",
        "Type": "RapidReachNET.DTO.PaymentRequestDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.FeedbackController",
    "Method": "GetAllFeedback",
    "RelativePath": "customer/getAllFeedback",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[RapidReachNET.DTO.FeedbackDTO, RapidReachNET, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "RapidReachNET.Controllers.PaymentController",
    "Method": "GetAllPayments",
    "RelativePath": "customer/GetAllPayments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "customer/getAllUsers",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.CourierController",
    "Method": "GetCourierById",
    "RelativePath": "customer/getCourierById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.CourierController",
    "Method": "GetCouriersByUser",
    "RelativePath": "customer/getCouriersByEmployee/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.CourierController",
    "Method": "GetCouriersByUserId",
    "RelativePath": "customer/getCouriersByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.PaymentController",
    "Method": "GetPaymentsByUserId",
    "RelativePath": "customer/GetPaymentsByUserId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.TrackingController",
    "Method": "GetTrackingStatusByCourierId",
    "RelativePath": "customer/getTrackingStatusByCourierId/{courierId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "courierId",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "customer/getUserById/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.UserController",
    "Method": "RegisterUser",
    "RelativePath": "customer/registerUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "RapidReachNET.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.TrackingController",
    "Method": "UpdateTrackingStatus",
    "RelativePath": "customer/updateStatus/{trackingId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "trackingId",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "newStatus",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "customer/updateUser/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int64",
        "IsRequired": true
      },
      {
        "Name": "user",
        "Type": "RapidReachNET.Models.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "RapidReachNET.Controllers.LginController",
    "Method": "Login",
    "RelativePath": "login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "RapidReachNET.DTO.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]